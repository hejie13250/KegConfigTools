<class:BasePage
  x:Class="小科狗配置.Page.GlobalSetting"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:class="clr-namespace:小科狗配置.Class"
  xmlns:contorl="clr-namespace:小科狗配置.Contorl"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="clr-namespace:小科狗配置"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  Title="GlobalSetting"
  FontSize="14"
  TextOptions.TextRenderingMode="ClearType"
  UseLayoutRounding="True"
  mc:Ignorable="d">
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="35" />
      <RowDefinition Height="*" />
      <RowDefinition Height="50" />
    </Grid.RowDefinitions>
    <StackPanel
      Margin="10,0,0,0"
      VerticalAlignment="Top"
      Orientation="Horizontal">
      <Button
        Width="70"
        Height="24"
        Click="Default_button_Click"
        Content="恢复默认"
        Style="{DynamicResource RoundButton2}"
        ToolTip="从备份文件“Keg_bak.txt”中恢复全局设置" />
      <Button
        Width="70"
        Height="24"
        Margin="5,0,0,0"
        Click="Apply2_button_Click"
        Content="重新读取"
        Style="{DynamicResource RoundButton2}"
        ToolTip="从“全局设置.json”中读取全局设置" />
      <Button
        Width="70"
        Height="24"
        Margin="5,0,0,0"
        Click="Apply3_button_Click"
        Content="应用设置"
        Style="{DynamicResource RoundButton2}"
        ToolTip="保存全局设置并更新到服务端" />
    </StackPanel>
    <ScrollViewer
      Grid.Row="1"
      HorizontalAlignment="Left"
      VerticalScrollBarVisibility="Hidden">
      <StackPanel x:Name="groupBoxStackPanel" Orientation="Vertical">
        <GroupBox
          Margin="10,0,10,10"
          Header="状态条"
          MouseEnter="GroupBox_MouseEnter"
          Style="{DynamicResource HiddenBorderGroupBoxStyle}">
          <Border Style="{DynamicResource CustomBorderStyle}">
            <StackPanel Orientation="Horizontal">
              <Grid Margin="10,10,10,10" HorizontalAlignment="Left">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="190" />
                  <ColumnDefinition Width="320" />
                  <ColumnDefinition Width="185" />
                </Grid.ColumnDefinitions>
                <Grid
                  Grid.Row="0"
                  Grid.Column="1"
                  Width="185"
                  Height="126"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Top">
                  <Image
                    x:Name="displayImage"
                    Width="175"
                    Height="125"
                    Margin="3,3,3,3" />
                  <TextBlock
                    x:Name="toolTipTextBlock"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    FontFamily="{Binding Text, ElementName=textBox_Copy24}"
                    FontSize="{Binding Value, ElementName=nud23}"
                    Foreground="Black"
                    Text="中c：方案名称" />
                </Grid>
                <CheckBox
                  x:Name="checkBox3_Copy"
                  Grid.Row="2"
                  Grid.Column="1"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Checked="CheckBox3_Copy_CheckedChanged"
                  Style="{DynamicResource CheckBoxStyle}"
                  Unchecked="CheckBox3_Copy_CheckedChanged" />
                <CheckBox
                  x:Name="checkBox3_Copy1"
                  Grid.Row="3"
                  Grid.Column="1"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Checked="CheckBox3_Copy1_CheckedChanged"
                  IsChecked="True"
                  Style="{DynamicResource CheckBoxStyle}"
                  Unchecked="CheckBox3_Copy1_CheckedChanged" />
                <Label
                  Grid.Row="2"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Content="隐藏提示文本："
                  Foreground="{DynamicResource TextForeground}" />
                <Label
                  Grid.Row="3"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Content="显示中英以及大小写状态："
                  Foreground="{DynamicResource TextForeground}" />
                <Label
                  Grid.Row="4"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Content="提示文本中文字体色："
                  Foreground="{DynamicResource TextForeground}" />
                <Label
                  Grid.Row="5"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Content="提示文本英文字体色："
                  Foreground="{DynamicResource TextForeground}" />
                <StackPanel
                  Grid.Row="4"
                  Grid.Column="1"
                  Orientation="Horizontal">
                  <Label
                    x:Name="color_Label_1"
                    Width="50"
                    Height="22"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Background="Black"
                    BorderBrush="Black"
                    BorderThickness="1,1,1,1"
                    Foreground="{DynamicResource TextForeground}"
                    MouseEnter="Color_label_MouseEnter"
                    MouseLeave="Color_label_MouseLeave"
                    Style="{DynamicResource RoundedLabel}" />
                  <Label
                    x:Name="color_Label_01"
                    Width="10"
                    Height="10"
                    Margin="1,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Background="#FFFF0000"
                    Style="{DynamicResource RoundedLabel}"
                    Visibility="Hidden" />
                </StackPanel>
                <StackPanel
                  Grid.Row="5"
                  Grid.Column="1"
                  Orientation="Horizontal">
                  <Label
                    x:Name="color_Label_2"
                    Width="50"
                    Height="22"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Background="#FFFF0000"
                    BorderBrush="Black"
                    BorderThickness="1,1,1,1"
                    Foreground="{DynamicResource TextForeground}"
                    MouseEnter="Color_label_MouseEnter"
                    MouseLeave="Color_label_MouseLeave"
                    Style="{DynamicResource RoundedLabel}" />
                  <Label
                    x:Name="color_Label_02"
                    Width="10"
                    Height="10"
                    Margin="1,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Background="#FFFF0000"
                    Style="{DynamicResource RoundedLabel}"
                    Visibility="Hidden" />
                </StackPanel>
                <Label
                  Grid.Row="6"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Content="提示文本字体大小："
                  Foreground="{DynamicResource TextForeground}" />
                <local:NumericUpDown
                  x:Name="nud23"
                  Grid.Row="6"
                  Grid.Column="1"
                  Width="50"
                  Height="22"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  MaxValue="72"
                  MinValue="8"
                  Value="20" />
                <Label
                  Grid.Row="7"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Content="字体名称："
                  Foreground="{DynamicResource TextForeground}" />
                <StackPanel
                  Grid.Row="7"
                  Grid.Column="1"
                  Orientation="Horizontal">
                  <TextBox
                    x:Name="textBox_Copy24"
                    Width="150"
                    Height="24"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Foreground="{DynamicResource TextForeground}"
                    Style="{DynamicResource RoundTextBox}"
                    Text="楷体"
                    TextWrapping="NoWrap"
                    ToolTip="若创建指定字体对象失败，就采用plane0字体，还失败则采用黑体" />
                  <Button
                    Width="27"
                    Height="24"
                    Margin="5,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Click="Button3_Copy_Click"
                    Style="{DynamicResource RoundButton2}">
                    <Image
                      Height="14"
                      Margin="2,2,2,2"
                      Source="{DynamicResource 三点}" />
                  </Button>
                </StackPanel>
                <Label
                  x:Name="ddLabel"
                  Grid.Row="1"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Content="提示文本的位置："
                  Foreground="{DynamicResource TextForeground}" />
                <StackPanel
                  Grid.Row="1"
                  Grid.Column="1"
                  Margin="-10,0,0,0"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Orientation="Horizontal">
                  <RadioButton
                    x:Name="radioButton18"
                    Height="16"
                    Margin="10,5,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Click="RadioButton_Click"
                    Content="顶部"
                    Foreground="{DynamicResource TextForeground}"
                    IsChecked="True" />
                  <RadioButton
                    x:Name="radioButton19"
                    Height="16"
                    Margin="10,5,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Click="RadioButton_Click"
                    Content="中间"
                    Foreground="{DynamicResource TextForeground}"
                    IsChecked="False" />
                  <RadioButton
                    x:Name="radioButton20"
                    Height="16"
                    Margin="10,5,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Click="RadioButton_Click"
                    Content="底部"
                    Foreground="{DynamicResource TextForeground}"
                    IsChecked="False" />
                </StackPanel>
                <Label
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Content="状态条预览："
                  Foreground="{DynamicResource TextForeground}" />
                <StackPanel
                  Grid.RowSpan="8"
                  Grid.Column="2"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Top"
                  Orientation="Vertical">
                  <ListBox
                    x:Name="skinListBox"
                    Height="137"
                    Margin="0,0,2,5"
                    VerticalAlignment="Top"
                    d:ItemsSource="{d:SampleData ItemCount=5}"
                    Foreground="{DynamicResource TextForeground}"
                    SelectionChanged="SkinListBox_SelectionChanged"
                    Style="{DynamicResource RoundedListBox}" />
                  <Button
                    Height="24"
                    Margin="0,0,2,10"
                    VerticalAlignment="Top"
                    Click="SaveButton1_Click"
                    Content="应用皮肤"
                    Style="{DynamicResource RoundButton2}" />
                  <contorl:ColorPicker
                    x:Name="colorPicker"
                    Height="155"
                    Margin="0,0,0,5" />
                  <StackPanel Orientation="Horizontal">
                    <Label
                      Height="auto"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Bottom"
                      Content="自定义："
                      Foreground="{DynamicResource TextForeground}" />
                    <local:RGBTextBox
                      x:Name="rgbTextBox"
                      Height="24"
                      Margin="8,0,0,0"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      ValueChanged="RGB_ValueChanged" />
                  </StackPanel>
                </StackPanel>
              </Grid>
            </StackPanel>
          </Border>
        </GroupBox>
        <GroupBox
          Header="在线查找"
          MouseEnter="GroupBox_MouseEnter"
          Style="{DynamicResource HiddenBorderGroupBoxStyle}">
          <Border Style="{DynamicResource CustomBorderStyle}">
            <Grid>
              <StackPanel Margin="0,0,0,0">
                <ListView
                  x:Name="listView3"
                  Margin="10,10,10,10"
                  d:ItemsSource="{d:SampleData ItemCount=3}"
                  BorderBrush="Black"
                  BorderThickness="1,1,1,1"
                  ItemsSource="{Binding UpdateSourceTrigger=PropertyChanged}"
                  PreviewMouseWheel="控件禁止响应滚轮事件"
                  Style="{DynamicResource ListViewStyle}">
                  <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                      <EventSetter Event="MouseEnter" Handler="ListViewItem_MouseEnter" />
                      <EventSetter Event="MouseLeave" Handler="ListViewItem_MouseLeave" />
                      <Setter Property="Background" Value="Transparent" />
                      <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                          <Setter Property="Background" Value="{DynamicResource ListItemIsSelectedBackground}" />
                          <Setter Property="Foreground" Value="{DynamicResource ListItemIsSelectedForeground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                          <Setter Property="Background" Value="{DynamicResource ListItemIsMouseOverBackground}" />
                          <Setter Property="Foreground" Value="{DynamicResource ListItemIsMouseOverForeground}" />
                        </Trigger>
                      </Style.Triggers>
                    </Style>
                  </ListView.ItemContainerStyle>
                  <ListView.View>
                    <GridView AllowsColumnReorder="True">
                      <GridViewColumn Width="160" Header="名称">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <TextBox
                              x:Name="nameTextBox"
                              Width="145"
                              Height="24"
                              Background="Transparent"
                              BorderThickness="0"
                              Foreground="{DynamicResource TextForeground}"
                              Style="{DynamicResource RoundTextBox}"
                              Text="{Binding Name}"
                              TextChanged="TextBox1_TextChanged"
                              TextWrapping="NoWrap"
                              ToolTip="在线查找名称" />
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                      <GridViewColumn Width="450" Header="命令">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <TextBox
                              x:Name="cmdTextBox"
                              Width="437"
                              Height="24"
                              BorderThickness="0"
                              Foreground="{DynamicResource TextForeground}"
                              Style="{DynamicResource RoundTextBox}"
                              Text="{Binding Value}"
                              TextChanged="TextBox2_TextChanged"
                              TextWrapping="NoWrap"
                              ToolTip="网址或可执行文件路径，带参数传送用&quot;&amp;&amp;&amp;&quot;连接参数：C:\py.exe&amp;&amp;&amp;1.py" />
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                      <GridViewColumn Width="45" Header="启用">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <CheckBox
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Click="CheckBox_Click"
                              IsChecked="{Binding Enable}"
                              Style="{DynamicResource CheckBoxStyle}" />
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                      <GridViewColumn Width="40" Header="删除">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <Button
                              x:Name="delButton"
                              Width="30"
                              Height="25"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              BorderThickness="0"
                              Click="DelButton_Click"
                              Style="{DynamicResource RoundButton}"
                              Tag="3"
                              Visibility="Hidden">
                              <Image Height="14" Source="{DynamicResource 删除}" />
                            </Button>
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>

                    </GridView>
                  </ListView.View>
                </ListView>
              </StackPanel>
            </Grid>
          </Border>
        </GroupBox>
        <GroupBox
          Header="外部工具"
          MouseEnter="GroupBox_MouseEnter"
          Style="{DynamicResource HiddenBorderGroupBoxStyle}">
          <Border Style="{DynamicResource CustomBorderStyle}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
              </Grid.RowDefinitions>
              <StackPanel Grid.Row="1" Margin="0,0,0,0">
                <ListView
                  x:Name="listView8"
                  Margin="10,10,10,10"
                  d:ItemsSource="{d:SampleData ItemCount=3}"
                  BorderBrush="Black"
                  BorderThickness="1,1,1,1"
                  ItemsSource="{Binding UpdateSourceTrigger=PropertyChanged}"
                  PreviewMouseWheel="控件禁止响应滚轮事件"
                  Style="{DynamicResource ListViewStyle}">
                  <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                      <EventSetter Event="MouseEnter" Handler="ListViewItem_MouseEnter" />
                      <EventSetter Event="MouseLeave" Handler="ListViewItem_MouseLeave" />
                      <Setter Property="Background" Value="Transparent" />
                      <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                          <Setter Property="Background" Value="{DynamicResource ListItemIsSelectedBackground}" />
                          <Setter Property="Foreground" Value="{DynamicResource ListItemIsSelectedForeground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                          <Setter Property="Background" Value="{DynamicResource ListItemIsMouseOverBackground}" />
                          <Setter Property="Foreground" Value="{DynamicResource ListItemIsMouseOverForeground}" />
                        </Trigger>
                      </Style.Triggers>
                    </Style>
                  </ListView.ItemContainerStyle>
                  <ListView.View>
                    <GridView AllowsColumnReorder="True">
                      <GridViewColumn Width="160" Header="名称">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>

                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <TextBox
                              x:Name="nameTextBox"
                              Width="145"
                              Height="24"
                              BorderThickness="0"
                              Foreground="{DynamicResource TextForeground}"
                              Style="{DynamicResource RoundTextBox}"
                              Text="{Binding Name}"
                              TextChanged="TextBox1_TextChanged"
                              TextWrapping="NoWrap"
                              ToolTip="外部工具名称" />

                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                      <GridViewColumn Width="450" Header="命令">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>

                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <TextBox
                              x:Name="cmdTextBox"
                              Width="437"
                              Height="24"
                              BorderThickness="0"
                              Foreground="{DynamicResource TextForeground}"
                              Style="{DynamicResource RoundTextBox}"
                              Text="{Binding Value}"
                              TextChanged="TextBox2_TextChanged"
                              TextWrapping="NoWrap"
                              ToolTip="外部工具的可执行文件路径" />

                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>


                      <GridViewColumn Width="45" Header="启用">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <CheckBox
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center"
                              Click="CheckBox_Click"
                              IsChecked="{Binding Enable}"
                              Style="{DynamicResource CheckBoxStyle}" />
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                      <GridViewColumn Width="40" Header="删除">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <Button
                              x:Name="delButton"
                              Width="30"
                              Height="25"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              BorderThickness="0"
                              Click="DelButton_Click"
                              Style="{DynamicResource RoundButton}"
                              Tag="8"
                              Visibility="Hidden">
                              <Image Height="14" Source="{DynamicResource 删除}" />
                            </Button>
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                    </GridView>
                  </ListView.View>
                </ListView>
              </StackPanel>
            </Grid>
          </Border>
        </GroupBox>
        <GroupBox
          Header="快捷命令"
          MouseEnter="GroupBox_MouseEnter"
          Style="{DynamicResource HiddenBorderGroupBoxStyle}">
          <Border Style="{DynamicResource CustomBorderStyle}">
            <Grid>
              <StackPanel Margin="0,0,0,0">
                <ListView
                  x:Name="listView4"
                  Margin="10,10,10,10"
                  d:ItemsSource="{d:SampleData ItemCount=3}"
                  BorderBrush="Black"
                  BorderThickness="1,1,1,1"
                  ItemsSource="{Binding UpdateSourceTrigger=PropertyChanged}"
                  PreviewMouseWheel="控件禁止响应滚轮事件"
                  Style="{DynamicResource ListViewStyle}">
                  <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                      <EventSetter Event="MouseEnter" Handler="ListViewItem_MouseEnter" />
                      <EventSetter Event="MouseLeave" Handler="ListViewItem_MouseLeave" />
                      <Setter Property="Background" Value="Transparent" />
                      <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                          <Setter Property="Background" Value="{DynamicResource ListItemIsSelectedBackground}" />
                          <Setter Property="Foreground" Value="{DynamicResource ListItemIsSelectedForeground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                          <Setter Property="Background" Value="{DynamicResource ListItemIsMouseOverBackground}" />
                          <Setter Property="Foreground" Value="{DynamicResource ListItemIsMouseOverForeground}" />
                        </Trigger>
                      </Style.Triggers>
                    </Style>
                  </ListView.ItemContainerStyle>
                  <ListView.View>
                    <GridView AllowsColumnReorder="True">
                      <GridViewColumn Width="417" Header="命令">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>

                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <TextBox
                              x:Name="cmdTextBox"
                              Width="403"
                              Height="24"
                              BorderThickness="0"
                              Foreground="{DynamicResource TextForeground}"
                              Style="{DynamicResource RoundTextBox}"
                              Text="{Binding Cmd}"
                              TextChanged="TextBox3_TextChanged"
                              TextWrapping="NoWrap" />
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                      <GridViewColumn Width="195" Header="热键">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <local:HotKeyControl
                              x:Name="hotKeyControl"
                              Width="180"
                              Height="25"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center"
                              FontSize="12"
                              HotKey="{Binding Value}"
                              HotKeyPressed="HotKeyControl_HotKeyPressed" />
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                      <GridViewColumn Width="45" Header="启用">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <CheckBox
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Click="CheckBox_Click"
                              IsChecked="{Binding Enable}"
                              Style="{DynamicResource CheckBoxStyle}" />
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                      <GridViewColumn Width="40" Header="删除">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <Button
                              x:Name="delButton"
                              Width="30"
                              Height="25"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              BorderThickness="0"
                              Click="DelButton_Click"
                              Style="{DynamicResource RoundButton}"
                              Tag="4"
                              Visibility="Hidden">
                              <Image Height="14" Source="{DynamicResource 删除}" />
                            </Button>
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>

                    </GridView>
                  </ListView.View>
                </ListView>
              </StackPanel>
            </Grid>
          </Border>
        </GroupBox>
        <GroupBox
          Header="快捷键"
          MouseEnter="GroupBox_MouseEnter"
          Style="{DynamicResource HiddenBorderGroupBoxStyle}">
          <Border Style="{DynamicResource CustomBorderStyle}">
            <Grid>
              <StackPanel Margin="0,0,0,0">
                <ListView
                  x:Name="listView5"
                  Margin="10,10,10,10"
                  d:ItemsSource="{d:SampleData ItemCount=3}"
                  BorderBrush="Black"
                  BorderThickness="1,1,1,1"
                  ItemsSource="{Binding UpdateSourceTrigger=PropertyChanged}"
                  PreviewMouseWheel="控件禁止响应滚轮事件"
                  Style="{DynamicResource ListViewStyle}">
                  <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                      <EventSetter Event="MouseEnter" Handler="ListViewItem_MouseEnter" />
                      <EventSetter Event="MouseLeave" Handler="ListViewItem_MouseLeave" />
                      <Setter Property="Background" Value="Transparent" />
                      <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                          <Setter Property="Background" Value="{DynamicResource ListItemIsSelectedBackground}" />
                          <Setter Property="Foreground" Value="{DynamicResource ListItemIsSelectedForeground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                          <Setter Property="Background" Value="{DynamicResource ListItemIsMouseOverBackground}" />
                          <Setter Property="Foreground" Value="{DynamicResource ListItemIsMouseOverForeground}" />
                        </Trigger>
                      </Style.Triggers>
                    </Style>
                  </ListView.ItemContainerStyle>
                  <ListView.View>
                    <GridView AllowsColumnReorder="True">
                      <!--<GridViewColumn
                        Width="100"
                        DisplayMemberBinding="{Binding Name}"
                        Header="名称" />-->
                      <GridViewColumn Width="417" Header="名称">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <Label
                              x:Name="hotKeyControl"
                              Width="180"
                              Height="25"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Content="{Binding Name}"
                              FontSize="12"
                              Foreground="{DynamicResource TextForeground}" />
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                      <GridViewColumn Width="195" Header="热键">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <local:HotKeyControl
                              x:Name="hotKeyControl"
                              Width="180"
                              Height="25"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              FontSize="12"
                              HotKey="{Binding Value}"
                              HotKeyPressed="HotKeyControl_HotKeyPressed" />
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                      <GridViewColumn Width="45" Header="启用">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <CheckBox
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center"
                              Click="CheckBox_Click"
                              IsChecked="{Binding Enable}"
                              Style="{DynamicResource CheckBoxStyle}" />
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                      <GridViewColumn Width="40" Header="删除">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <Button
                              x:Name="delButton"
                              Width="30"
                              Height="25"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              BorderThickness="0"
                              Click="DelButton_Click"
                              Style="{DynamicResource RoundButton}"
                              Tag="5"
                              Visibility="Hidden">
                              <Image Height="14" Source="{DynamicResource 删除}" />
                            </Button>
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                    </GridView>
                  </ListView.View>
                </ListView>
              </StackPanel>
            </Grid>
          </Border>
        </GroupBox>
        <GroupBox
          Header="自启动应用"
          MouseEnter="GroupBox_MouseEnter"
          Style="{DynamicResource HiddenBorderGroupBoxStyle}">
          <Border Style="{DynamicResource CustomBorderStyle}">
            <Grid>
              <StackPanel Margin="0,0,0,0">
                <ListView
                  x:Name="listView6"
                  Margin="10,10,10,10"
                  d:ItemsSource="{d:SampleData ItemCount=3}"
                  BorderBrush="Black"
                  BorderThickness="1,1,1,1"
                  ItemsSource="{Binding UpdateSourceTrigger=PropertyChanged}"
                  PreviewMouseWheel="控件禁止响应滚轮事件"
                  Style="{DynamicResource ListViewStyle}">
                  <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                      <EventSetter Event="MouseEnter" Handler="ListViewItem_MouseEnter" />
                      <EventSetter Event="MouseLeave" Handler="ListViewItem_MouseLeave" />
                      <Setter Property="Background" Value="Transparent" />
                      <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                          <Setter Property="Background" Value="{DynamicResource ListItemIsSelectedBackground}" />
                          <Setter Property="Foreground" Value="{DynamicResource ListItemIsSelectedForeground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                          <Setter Property="Background" Value="{DynamicResource ListItemIsMouseOverBackground}" />
                          <Setter Property="Foreground" Value="{DynamicResource ListItemIsMouseOverForeground}" />
                        </Trigger>
                      </Style.Triggers>
                    </Style>
                  </ListView.ItemContainerStyle>
                  <ListView.View>
                    <GridView AllowsColumnReorder="True">
                      <GridViewColumn Width="612" Header="命令">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <TextBox
                              x:Name="cmdTextBox"
                              Width="597"
                              Height="24"
                              BorderThickness="0"
                              Foreground="{DynamicResource TextForeground}"
                              Style="{DynamicResource RoundTextBox}"
                              Text="{Binding Value}"
                              TextChanged="TextBox2_TextChanged"
                              TextWrapping="NoWrap" />
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                      <GridViewColumn Width="45" Header="启用">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <CheckBox
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Click="CheckBox_Click"
                              IsChecked="{Binding Enable}"
                              Style="{DynamicResource CheckBoxStyle}" />
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                      <GridViewColumn Width="40" Header="删除">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <Button
                              x:Name="delButton"
                              Width="30"
                              Height="25"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              BorderThickness="0"
                              Click="DelButton_Click"
                              Style="{DynamicResource RoundButton}"
                              Tag="6"
                              Visibility="Hidden">
                              <Image Height="14" Source="{DynamicResource 删除}" />
                            </Button>
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                    </GridView>
                  </ListView.View>
                </ListView>
              </StackPanel>
            </Grid>
          </Border>
        </GroupBox>
        <GroupBox
          Header="定时关机"
          MouseEnter="GroupBox_MouseEnter"
          Style="{DynamicResource HiddenBorderGroupBoxStyle}">
          <Border Style="{DynamicResource CustomBorderStyle}">
            <Grid>
              <StackPanel Margin="0,0,0,0">
                <ListView
                  x:Name="listView7"
                  Margin="10,10,10,10"
                  d:ItemsSource="{d:SampleData ItemCount=3}"
                  BorderBrush="Black"
                  BorderThickness="1,1,1,1"
                  ItemsSource="{Binding UpdateSourceTrigger=PropertyChanged}"
                  PreviewMouseWheel="控件禁止响应滚轮事件"
                  Style="{DynamicResource ListViewStyle}">
                  <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                      <EventSetter Event="MouseEnter" Handler="ListViewItem_MouseEnter" />
                      <EventSetter Event="MouseLeave" Handler="ListViewItem_MouseLeave" />
                      <Setter Property="Background" Value="Transparent" />
                      <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                          <Setter Property="Background" Value="{DynamicResource ListItemIsSelectedBackground}" />
                          <Setter Property="Foreground" Value="{DynamicResource ListItemIsSelectedForeground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                          <Setter Property="Background" Value="{DynamicResource ListItemIsMouseOverBackground}" />
                          <Setter Property="Foreground" Value="{DynamicResource ListItemIsMouseOverForeground}" />
                        </Trigger>
                      </Style.Triggers>
                    </Style>
                  </ListView.ItemContainerStyle>
                  <ListView.View>
                    <GridView AllowsColumnReorder="True">
                      <!--<GridViewColumn
                        Width="417"
                        DisplayMemberBinding="{Binding Name}"
                        Header="名称" />-->
                      <GridViewColumn Width="417" Header="名称">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <Label
                              x:Name="hotKeyControl"
                              Width="180"
                              Height="25"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Content="{Binding Name}"
                              FontSize="12"
                              Foreground="{DynamicResource TextForeground}" />
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                      <GridViewColumn Width="195" Header="时间">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <local:TimeControl
                              x:Name="hotKeyControl"
                              Width="180"
                              Height="25"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              FontSize="12"
                              Time="{Binding Value}" />
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                      <GridViewColumn Width="45" Header="启用">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                            <CheckBox
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center"
                              Click="CheckBox_Click"
                              IsChecked="{Binding Enable}"
                              Style="{DynamicResource CheckBoxStyle}" />
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                      <GridViewColumn Width="40" Header="删除">
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <Button
                              x:Name="delButton"
                              Width="30"
                              Height="25"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              BorderThickness="0"
                              Click="DelButton_Click"
                              Style="{DynamicResource RoundButton}"
                              Tag="7"
                              Visibility="Hidden">
                              <Image Height="14" Source="{DynamicResource 删除}" />
                            </Button>
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                    </GridView>
                  </ListView.View>
                </ListView>
              </StackPanel>
            </Grid>
          </Border>
        </GroupBox>
        <GroupBox
          Header="其它选项"
          MouseEnter="GroupBox_MouseEnter"
          Style="{DynamicResource HiddenBorderGroupBoxStyle}">
          <Border Style="{DynamicResource CustomBorderStyle}">
            <Grid Margin="10,10,10,10" HorizontalAlignment="Left">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="630" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Label
                x:Name="label23_Copy158"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="打字统计数据保存位置由 C:\SiKegInput 转到主程序文件夹（确定后重启服务端生效）："
                Foreground="{DynamicResource TextForeground}" />
              <CheckBox
                x:Name="checkBox3_Copy3"
                Grid.Column="1"
                Height="20"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                IsChecked="True"
                Style="{DynamicResource CheckBoxStyle}" />
              <Label
                x:Name="label23_Copy159"
                Grid.Row="1"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="快键只在候选窗口显示情况下才起作用，方案、查找、状态条和打开文字配置快键除外："
                Foreground="{DynamicResource TextForeground}" />
              <CheckBox
                x:Name="checkBox3_Copy2"
                Grid.Row="1"
                Grid.Column="1"
                Height="20"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                IsChecked="True"
                Style="{DynamicResource CheckBoxStyle}" />
              <StackPanel Grid.Row="2" Orientation="Horizontal">
                <Label
                  x:Name="label23_Copy160"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Content="自动锁屏时间段和密码前缀："
                  Foreground="{DynamicResource TextForeground}" />
                <StackPanel Orientation="Horizontal">
                  <local:NumericUpDown
                    x:Name="nud1"
                    Width="50"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    MaxValue="23"
                    MinValue="13"
                    ToolTip="自动锁屏开始时间 - 小时"
                    Value="20" />
                  <Label
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Content=" - "
                    Foreground="{DynamicResource TextForeground}" />
                  <local:NumericUpDown
                    x:Name="nud2"
                    Width="50"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    MaxValue="12"
                    MinValue="0"
                    ToolTip="自动锁屏结束时间 - 小时"
                    Value="7" />
                  <TextBox
                    x:Name="mmTextBox"
                    Width="100"
                    Height="24"
                    Margin="10,0,0,0"
                    Padding="0,0,0,0"
                    Foreground="{DynamicResource TextForeground}"
                    Style="{DynamicResource RoundTextBox}"
                    Tag="密码前缀"
                    TextWrapping="Wrap"
                    ToolTip="解锁密码为：前缀+时间后缀，默认前缀是wjh，也可自定义。例如早上7:25分解锁，后缀即为0725，密码则是：wjh0725" />
                </StackPanel>

              </StackPanel>

              <CheckBox
                x:Name="checkBox3_Copy4"
                Grid.Row="2"
                Grid.Column="1"
                Height="20"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Style="{DynamicResource CheckBoxStyle}" />
            </Grid>
          </Border>
        </GroupBox>
      </StackPanel>
    </ScrollViewer>
    <StackPanel
      Grid.Row="2"
      Margin="10,10,0,0"
      VerticalAlignment="Top"
      Orientation="Horizontal">
      <Button
        Width="auto"
        Height="24"
        Click="Add_button_Click"
        Content="添加在线查找"
        Style="{DynamicResource RoundButton2}" />
      <Button
        Width="auto"
        Height="24"
        Margin="10,0,0,0"
        Click="Add_button_Click"
        Content="添加外部工具"
        Style="{DynamicResource RoundButton2}" />
      <Button
        Width="auto"
        Height="24"
        Margin="10,0,0,0"
        Click="Add_button_Click"
        Content="添加快捷命令"
        Style="{DynamicResource RoundButton2}" />
      <Button
        Width="auto"
        Height="24"
        Margin="10,0,0,0"
        Click="Add_button_Click"
        Content="添加快捷键"
        Style="{DynamicResource RoundButton2}" />
      <ComboBox
        x:Name="comboBox4"
        Width="120"
        Height="24"
        Margin="5,0,0,0"
        Foreground="{DynamicResource TextForeground}"
        SelectedIndex="0"
        Style="{DynamicResource RoundComboBox}">
        <ComboBoxItem Content="反查方案快键" />
        <ComboBoxItem Content="换皮肤快键" />
        <ComboBoxItem Content="在线查找快键" />
        <ComboBoxItem Content="方案选择快键" />
        <ComboBoxItem Content="手动加词条快键" />
        <ComboBoxItem Content="候选窗口调大快键" />
        <ComboBoxItem Content="候选窗口调小快键" />
        <ComboBoxItem Content="上屏反查字段快键" />
        <ComboBoxItem Content="调整词条置顶快键" />
        <ComboBoxItem Content="删除方案或词条快键" />
        <ComboBoxItem Content="进入英文长句态快键" />
        <ComboBoxItem Content="上屏后再取坐标快键" />
        <ComboBoxItem Content="截图候选窗口上屏快键" />
        <ComboBoxItem Content="截图选中候选上屏快键" />
        <ComboBoxItem Content="截图选中反查上屏快键" />
        <ComboBoxItem Content="设置截候选图上屏快键" />
        <ComboBoxItem Content="设置上屏反查字段快键" />
        <ComboBoxItem Content="打开文字配置界面快键" />
        <ComboBoxItem Content="显示或隐藏状态条快键" />
        <ComboBoxItem Content="显示或隐藏反查字段快键" />
        <ComboBoxItem Content="状态栏回到主屏右下角快键" />
        <ComboBoxItem Content="获取使用说明重新配置快键" />
        <ComboBoxItem Content="锁定当前进程为TSF跟随快键" />
      </ComboBox>
      <Button
        Width="auto"
        Height="24"
        Margin="10,0,0,0"
        Click="Add_button_Click"
        Content="添加自启应用"
        Style="{DynamicResource RoundButton2}" />
      <Button
        Width="auto"
        Height="24"
        Margin="10,0,0,0"
        Click="Add_button_Click"
        Content="添加定时关机"
        Style="{DynamicResource RoundButton2}" />
    </StackPanel>
  </Grid>
</class:BasePage>
